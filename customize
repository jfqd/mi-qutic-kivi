#!/bin/bash

set -o errexit

export LC_ALL=en_US.utf8
export LANGUAGE=en_US.utf8
export LANG=en_US.utf8

KIVITENDO_VERSION="3.5.6"
PG_VERSION=9.6

export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
export DEBIAN_FRONTEND=noninteractive

echo "* Get latest"
apt-get -y update
apt-get -y upgrade
apt-get -y dist-upgrade

echo "* Install kivitendo"
mkdir -p /usr/local/src/kivitendo_documents
cd /usr/local/src/
chown -R www-data:staff kivitendo_documents
git clone https://github.com/kivitendo/kivitendo-erp.git
cd kivitendo-erp
git checkout -b release-${KIVITENDO_VERSION}
mkdir webdav
chown -R www-data users spool webdav templates
mv /usr/local/var/tmp/kivitendo.conf config/kivitendo.conf
cp scripts/boot/systemd/kivitendo-task-server.service /etc/systemd/system/
sed -i \
     -e "s#/var/www/kivitendo-erp/scripts/task_server.pl#/usr/local/src/kivitendo-erp/scripts/task_server.pl#" \
     /etc/systemd/system/kivitendo-task-server.service
systemctl daemon-reload
cpanm HTML::Restrict

echo "* Patch kivitendo"
# mv /usr/local/var/tmp/menu-bar.css css/lx-office-erp/dhtmlsuite/menu-bar.css
# mv /usr/local/var/tmp/header.css css/lx-office-erp/frame_header/header.css
# mv /usr/local/var/tmp/menu.css css/lx-office-erp/menu.css
sed -i \
     -e "s#<div id=\"row_table_scroll_id\" style=\"overflow-y: auto; height: 25vh\">#<div id=\"row_table_scroll_id\" style=\"overflow-y: auto;\">#" \
     /usr/local/src/kivitendo-erp/templates/webpages/order/tabs/basic_data.html

# fix aqbanking
aqbanking_version=$(aqbanking-cli -h 2>&1 | head -n1 | tr -d "This is version ")
if [[ ${aqbanking_version:0:1} -eq 5 ]]; then
  sed -i \
      -e 's#$sfile->get_path . "/$import_filename | $aqbin --cfgdir=\"" . $sfile->get_path . "\" export --profile=kivi 2> /dev/null ";#$sfile->get_path . "/$import_filename | $aqbin --cfgdir=\"" . $sfile->get_path . "\" listtrans --exporter=\"csv\" --profile=kivi 2> /dev/null ";#' \
      /usr/local/src/kivitendo-erp/SL/Helper/MT940.pm b/SL/Helper/MT940.pm
fi

echo "* Install kivitendo-api"
addgroup ruby
adduser --disabled-password --system --quiet --home /home/ruby --shell /bin/bash ruby
adduser ruby ruby
mkdir -p /home/ruby/www/
cd /home/ruby/www/
git clone https://github.com/jfqd/kivitendo_rest_api.git
cd kivitendo_rest_api
gem install bundler -v1.17.3
export RAILS_ENV=production
export BUNDLER_WITHOUT="development test"
bundle install --without development test
rm config/secrets.yml config/secrets.yml.enc config/secrets.yml.key || true
mv config/secrets.yml.bak config/secrets.yml
RAILS_SECRET=$(bundle exec rails secret)
sed -i \
     -e "s/enter-secret_key_base-here/${RAILS_SECRET}/" \
     config/secrets.yml
sed -i \
     -e "s/config.read_encrypted_secrets = true/config.read_encrypted_secrets = false/" \
     config/environments/production.rb
chown -R ruby:ruby /home/ruby
cp /usr/local/var/tmp/kivitendo-api.service /etc/systemd/system/kivitendo-api.service
systemctl daemon-reload

echo "* Setup ssh for api deployment"
mkdir -p /home/ruby/.ssh/
chmod 0700 /home/ruby/.ssh/
touch /home/ruby/.ssh/authorized_keys
chmod 0600 /home/ruby/.ssh/authorized_keys
chown -R ruby:ruby /home/ruby/.ssh

echo "* Activate apache modules"
a2enmod fcgid  || true
a2enmod dav    || true
a2enmod dav_fs || true
a2enmod ssl    || true
mkdir -p /etc/apache2/ssl
chmod 0750 /etc/apache2/ssl
/usr/sbin/a2enmod rewrite
/usr/local/bin/ssl-selfsigned.sh -d /etc/apache2/ssl -f kivitendo
systemctl restart apache2

if [[ -d /etc/postgresql/11 ]]; then
  echo "* Fix postgresql installation"
  systemctl stop postgresql
  pkill postgres
  pg_createcluster 11 main --start &
  sleep 30
  pkill postgres
  # fix installation
  rm /lib/systemd/system/postgresql*
  mv /usr/local/var/tmp/postgresql.service /lib/systemd/system/postgresql.service
  sed -i -e "s/%i/11 main/g" /lib/systemd/system/postgresql.service
  sed -i -e "s/%I/11/g" /lib/systemd/system/postgresql.service
  systemctl daemon-reload &
  PG_VERSION=11
fi

echo "* Setup postgresql"
sed -i \
    -e "s/#listen_addresses = 'localhost'/listen_addresses = 'localhost'/" \
    /etc/postgresql/${PG_VERSION}/main/postgresql.conf
echo "local all kivitendo password" >> /etc/postgresql/${PG_VERSION}/main/pg_hba.conf
echo "host all kivitendo 127.0.0.1 255.255.255.255 password" >> /etc/postgresql/${PG_VERSION}/main/pg_hba.conf
mv /usr/local/var/tmp/psql_kivi_user.sql /usr/local/src/kivitendo-erp/config/psql_kivi_user.sql
mv /usr/local/var/tmp/psql_kivi_superuser.sql /usr/local/src/kivitendo-erp/config/psql_kivi_superuser.sql
systemctl start postgresql

echo "* Setup postgresql backup"
mkdir -p /var/lib/postgresql/backups
chown postgres:postgres /var/lib/postgresql/backups
echo "0 1 * * * /usr/local/bin/psql_backup" >> /var/spool/cron/crontabs/postgres
echo "0 2 1 * * /usr/bin/vacuumdb --all" >> /var/spool/cron/crontabs/postgres
chown postgres:crontab /var/spool/cron/crontabs/postgres

echo "* Ensure bootstrap will run next time"
rm -rf /var/lib/bootstrap

echo "* Cleaning up."
# apt-get -y purge git make gcc g++ build-essential
rm -rf /usr/local/var/tmp/*
history -c
