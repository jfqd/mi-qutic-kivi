#!/bin/bash

set -o errexit

export LC_ALL=en_US.utf8
export LANGUAGE=en_US.utf8
export LANG=en_US.utf8

KIVITENDO_VERSION="3.9.1"
PG_VERSION=17

export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
export DEBIAN_FRONTEND=noninteractive

echo "* Get latest"
apt-get -y update
apt-get -y upgrade
apt-get -y dist-upgrade

echo "* Setup language env"
locale-gen en_US.utf8 || true

echo "* Install kivitendo"
mkdir -p /usr/local/src/kivitendo_documents
cd /usr/local/src/
chown -R www-data:staff kivitendo_documents
git clone https://github.com/kivitendo/kivitendo-erp.git
cd kivitendo-erp
git checkout release-${KIVITENDO_VERSION}
git checkout -b release-${KIVITENDO_VERSION}-changes
git am /usr/local/var/tmp/0001-migrate-list-to-compactitem.patch
sed -i -e "s|\$self->_mk_render('file/list', 1, 0, \$json);|\$self->_mk_render('file/list', 0, 0, \$json)|" SL/Controller/File.pm
# sed -i -e "s/edit_attachments/1==2/" templates/design40_webpages/file/list.html
# sed -i -e "s/edit_attachments/1==2/" templates/mobile_webpages/file/list.html
# sed -i -e "s/edit_attachments/1==2/" templates/webpages/file/list.html
git add .
git commit -m "after deploy changes"
mkdir webdav
chown -R www-data:www-data users spool webdav templates
mv /usr/local/var/tmp/kivitendo.conf config/kivitendo.conf
cp scripts/boot/systemd/kivitendo-task-server.service /etc/systemd/system/
sed -i \
     -e "s#/var/www/kivitendo-erp/scripts/task_server.pl#/usr/local/src/kivitendo-erp/scripts/task_server.pl#" \
     /etc/systemd/system/kivitendo-task-server.service
systemctl daemon-reload
# new for 3.6.1
cpanm HTML::Restrict IPC::Run || true
# new for 3.9.0
cpanm Encode::IMAPUTF7 Mail::IMAPClient || true

echo "* check requirements"
./scripts/installation_check.pl -v || true

echo "* Export SEPA as xml-file"
sed -i \
  -e "s/'.cdd'/'.xml'/" \
  /usr/local/src/kivitendo-erp/bin/mozilla/sepa.pl

echo "* Install requirements for kivitendo-api"
addgroup ruby
adduser --disabled-password --system --quiet --home /home/ruby --shell /bin/bash ruby
adduser ruby ruby
mkdir -p /home/ruby/www/

echo "* Setup ssh for api deployment"
mkdir -p /home/ruby/.ssh/
chmod 0700 /home/ruby/.ssh/
touch /home/ruby/.ssh/authorized_keys
chmod 0600 /home/ruby/.ssh/authorized_keys
chown -R ruby:ruby /home/ruby/.ssh

echo "* Activate apache modules"
a2enmod fcgid  || true
a2enmod dav    || true
a2enmod dav_fs || true
a2enmod ssl    || true
mkdir -p /etc/apache2/ssl
chmod 0750 /etc/apache2/ssl
/usr/sbin/a2enmod rewrite
/usr/sbin/a2enmod headers
/usr/local/bin/ssl-selfsigned.sh -d /etc/apache2/ssl -f kivitendo
systemctl restart apache2

echo "* Setup apt-requirements for postgresql"
wget -O /usr/share/keyrings/postgresql.asc https://www.postgresql.org/media/keys/ACCC4CF8.asc
echo "deb [signed-by=/usr/share/keyrings/postgresql.asc] http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/postgresql.list

echo "* Install postgresql"
apt-get update
apt-get install -y "postgresql-${PG_VERSION}" postgresql-contrib

echo "* Fix postgresql for lx-branch"
sed -i -e "s|PIDFile=|#PIDFile=|" /lib/systemd/system/postgresql@.service
systemctl daemon-reload
pg_createcluster ${PG_VERSION} main --start || true
apt-mark hold "postgresql-${PG_VERSION}"

echo "* Setup postgresql"
if [[ -d "/etc/postgresql/${PG_VERSION}/main" ]]; then
  sed -i \
      -e "s/#listen_addresses = 'localhost'/listen_addresses = 'localhost'/" \
      /etc/postgresql/${PG_VERSION}/main/postgresql.conf
  cat >> /etc/postgresql/${PG_VERSION}/main/pg_hba.conf << EOF
local   all             kivitendo                               password
host    all             kivitendo       127.0.0.1/32            password
host    all             kivitendo       ::1/128                 password
EOF

else
  echo "* ERROR: /etc/postgresql/${PG_VERSION}/main missing"
fi

echo "* Copy kivitendo postgresql setup"
mv /usr/local/var/tmp/psql_kivi_user.sql /usr/local/src/kivitendo-erp/config/psql_kivi_user.sql
mv /usr/local/var/tmp/psql_kivi_superuser.sql /usr/local/src/kivitendo-erp/config/psql_kivi_superuser.sql
mv /usr/local/var/tmp/psql_kivi_template1.sql /usr/local/src/kivitendo-erp/config/psql_kivi_template1.sql
cp /usr/local/var/tmp/kivitendo-api_service /usr/local/src/kivitendo-erp/config/kivitendo-api.service

echo "* Setup postgresql backup"
mkdir -p /var/lib/postgresql/backups
chown postgres:postgres /var/lib/postgresql/backups
cat > /etc/cron.d/kivi-cron << 'EOF'
MAILTO=root
#
0 1 * * *     postgres   /usr/local/bin/psql_backup
0 2 1 * *     postgres   /usr/bin/vacuumdb --all
0 4 * * *     root       /usr/local/bin/kivi_backup
# 0 3 * * *     www-data   /usr/bin/perl /usr/local/src/kivitendo-erp/scripts/task_server.pl --run-job=2 debug
# */10 6-18 * * *   www-data   /usr/bin/perl /usr/local/src/kivitendo-erp/scripts/task_server.pl --run-job=555 debug >/dev/null 2>&1
# END
EOF

echo "* Create bash-history"
cat >> /root/.bash_history << EOF
systemctl edit --full kivitendo-task-server.service
systemctl daemon-reload
systemctl reset-failed kivitendo-task-server.service
systemctl restart apache2
journalctl --since $(date '+%Y-%m-%d')
journalctl -r
cd /usr/local/src/kivitendo-erp
su - postgres
su - ruby
EOF

echo "* Ensure bootstrap will run next time"
rm -rf /var/lib/bootstrap

echo "* Cleaning up."
# apt-get -y purge git make gcc g++ build-essential
rm -rf /root/customize
rm -rf /usr/local/var/tmp/*
rm -rf /var/spool/mail/*
history -c
