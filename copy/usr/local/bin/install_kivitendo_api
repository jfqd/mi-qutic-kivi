#!/usr/bin/bash

cd /home/ruby/www/
git clone https://github.com/jfqd/kivitendo_rest_api.git
cd kivitendo_rest_api
gem install bundler -v2.4.21
export RAILS_ENV=production
export BUNDLER_WITHOUT="development test"
bundle install --without development test || true
rm config/secrets.yml config/secrets.yml.enc config/secrets.yml.key || true
mv config/secrets.yml.bak config/secrets.yml
RAILS_SECRET=$(bundle exec rails secret)
sed -i \
    -e "s/enter-secret_key_base-here/${RAILS_SECRET}/" \
    config/secrets.yml
sed -i \
    -e "s/config.read_encrypted_secrets = true/config.read_encrypted_secrets = false/" \
    config/environments/production.rb
chown -R ruby:ruby /home/ruby
chmod 0640 config/secrets.yml

mv /usr/local/src/kivitendo-erp/config/kivitendo-api.service /etc/systemd/system/kivitendo-api.service
systemctl daemon-reload

# setup kivitendo-api postgesql-connection
if /native/usr/sbin/mdata-get psql_kivitendo_pwd 1>/dev/null 2>&1; then
  DB_USER_PWD=$(/native/usr/sbin/mdata-get psql_kivitendo_pwd)
  sed -i \
      -e "s#postgres://pg-user:pg-pwd@pg-host/pg-db-name#postgres://kivitendo:${DB_USER_PWD}@127.0.0.1/kivitendo#" \
      /home/ruby/www/kivitendo_rest_api/config/secrets.yml
fi

# setup kivitendo-api http-basic user
if /native/usr/sbin/mdata-get kivi_api_user 1>/dev/null 2>&1; then
  API_USR=$(/native/usr/sbin/mdata-get kivi_api_user)
  sed -i \
      -e "s#enter-http-user-here#${API_USR}#" \
      /home/ruby/www/kivitendo_rest_api/config/secrets.yml
fi

# setup kivitendo-api http-basic password
if /native/usr/sbin/mdata-get kivi_api_pwd 1>/dev/null 2>&1; then
  API_PWD=$(/native/usr/sbin/mdata-get kivi_api_pwd)
  sed -i \
      -e "s#enter-http-password-here#${API_PWD}#" \
      /home/ruby/www/kivitendo_rest_api/config/secrets.yml
fi

# start kivitendo-api
systemctl enable kivitendo-api.service
systemctl start kivitendo-api.service
